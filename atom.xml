<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hine个人博客</title>
  
  <subtitle>金风玉露一相逢，便胜却、人间无数。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-23T15:43:32.630Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hine</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker基础使用</title>
    <link href="http://yoursite.com/2020/03/23/Docker%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/03/23/Docker%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</id>
    <published>2020-03-23T15:39:52.000Z</published>
    <updated>2020-03-23T15:43:32.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Docker容器使用"><a href="#Docker容器使用" class="headerlink" title="Docker容器使用"></a>Docker容器使用</h3><blockquote><p>创建并启动运行一个新容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name hineUbuntu --network test-net ubuntu &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">-it:交互式终端方式运行</span><br><span class="line">-d:后台运行</span><br><span class="line">--name:给容器命名</span><br><span class="line">--network:加入哪个Docker网络中</span><br><span class="line">&#x2F;bin&#x2F;bash:放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 &#x2F;bin&#x2F;bas</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line">docker run -d -P training&#x2F;webapp python app.py</span><br><span class="line"></span><br><span class="line">-P:将容器内部使用的网络端口映射到我们使用的主机上的随机端口</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line">docker run -d -p 5000:5000 training&#x2F;webapp python app.py</span><br><span class="line">docker run -d -p 127.0.0.1:5000:5000 training&#x2F;webapp python app.py</span><br><span class="line"></span><br><span class="line">-p:将容器内部使用的网络端口映射到我们使用的主机上的指定端口</span><br></pre></td></tr></table></figure><blockquote><p>查看指定容器使用的端口映射到宿主机的端口号</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port d6403a52907a[容器ID]</span><br></pre></td></tr></table></figure><blockquote><p>查看容器内部标准日志输出</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f d6403a52907a[容器ID]</span><br><span class="line"></span><br><span class="line">-f: 让 docker logs 像使用 tail -f 一样来一直实时输出容器内部的标准输出。</span><br></pre></td></tr></table></figure><blockquote><p>查看容器内部运行的进程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top d6403a52907a[容器ID]</span><br></pre></td></tr></table></figure><blockquote><p>-d命令启动的容器在后台，此时想要进入运行中的容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker attach 37199d8fe729[容器ID]</span><br><span class="line"></span><br><span class="line">docker exec -it e61409a69155 &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">attach:使用exit退出时会停止当前进入的容器</span><br><span class="line">exec:使用exit退出不会影响当前进入的容器</span><br></pre></td></tr></table></figure><blockquote><p>查看本地容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">-a:查看所有容器</span><br><span class="line">-l:查看最后一次创建的容器</span><br></pre></td></tr></table></figure><blockquote><p>开启/重启已经存在的某个容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker start e61409a69155[容器ID]</span><br><span class="line"></span><br><span class="line">docker restart e61409a69155[容器ID]</span><br></pre></td></tr></table></figure><blockquote><p>停止某个容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop e61409a69155[容器ID]</span><br></pre></td></tr></table></figure><blockquote><p>将容器导出到本地</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export e61409a69155[容器ID] &gt; &#x2F;Users&#x2F;hine&#x2F;docker&#x2F;mysql.tar[本地路径]</span><br></pre></td></tr></table></figure><blockquote><p>将本地容器导入为docker镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import &#x2F;Users&#x2F;hine&#x2F;docker&#x2F;mysql.tar[本地路径&#x2F;网上url] test&#x2F;ubuntu:v1[镜像仓库repository:tag版本号]</span><br></pre></td></tr></table></figure><blockquote><p>删除指定容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f 37199d8fe729[容器ID]</span><br><span class="line"></span><br><span class="line">-f:强制删除运行中的容器</span><br></pre></td></tr></table></figure><blockquote><p>删除清理所有终止状态的容器</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container prune</span><br></pre></td></tr></table></figure><blockquote><p>查看容器底层配置及状态信息</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker inspect d6403a52907a</span><br><span class="line"></span><br><span class="line">返回JSON格式的具体容器底层信息</span><br></pre></td></tr></table></figure><h3 id="Docker镜像使用"><a href="#Docker镜像使用" class="headerlink" title="Docker镜像使用"></a>Docker镜像使用</h3><blockquote><p>列出镜像列表</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><blockquote><p>查找需要使用的镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以到镜像网址搜索，如：https:&#x2F;&#x2F;hub.docker.com</span><br><span class="line">或</span><br><span class="line">docker search kafka</span><br></pre></td></tr></table></figure><blockquote><p>拉取载入镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull training&#x2F;webapp</span><br></pre></td></tr></table></figure><blockquote><p>删除镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 6fae60ef3446[镜像ID&#x2F;name]</span><br></pre></td></tr></table></figure><blockquote><p>基于已有容器创建新镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m&#x3D;&quot;提交描述信息&quot; -a&#x3D;&quot;镜像作者&quot; c69b9eabedec hine&#x2F;ubuntu:v1</span><br><span class="line"></span><br><span class="line">-m:提交的描述信息</span><br><span class="line">-a:指定的镜像作者</span><br><span class="line">c69b9eabedec:容器ID</span><br><span class="line">hine&#x2F;ubuntu:v1:指定要创建的目标镜像名</span><br></pre></td></tr></table></figure><blockquote><p>基于Dockerfile创建新镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker build -t hine&#x2F;centos:6.7 .</span><br><span class="line"></span><br><span class="line">-t:指定创建的目标镜像名</span><br><span class="line">.:Dockerfile文件所在目录，可指定Dockerfile绝对路径</span><br></pre></td></tr></table></figure><blockquote><p>为指定镜像添加标签</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag bdd580ced7ff hine&#x2F;centos:dev</span><br></pre></td></tr></table></figure><blockquote><p>推送镜像</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hub.docker.com</span><br><span class="line"></span><br><span class="line">docker push username&#x2F;ubuntu:18.04</span><br></pre></td></tr></table></figure><h3 id="Docker容器互联"><a href="#Docker容器互联" class="headerlink" title="Docker容器互联"></a>Docker容器互联</h3><blockquote><p>查看docker所有网络</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure><blockquote><p>创建一个新的Docker网络</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d bridge test-net</span><br><span class="line"></span><br><span class="line">-d:指定网络类型 bridge&#x2F;overlay</span><br></pre></td></tr></table></figure><blockquote><p>容器加入网络</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name test1 --network test-net ubuntu &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Docker的一些基本命令总结
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Docker" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/Docker/"/>
    
    
      <category term="Docker基础" scheme="http://yoursite.com/tags/Docker%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Idea永久破解方法</title>
    <link href="http://yoursite.com/2020/02/28/Idea%E6%B0%B8%E4%B9%85%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/02/28/Idea%E6%B0%B8%E4%B9%85%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/</id>
    <published>2020-02-28T01:23:50.000Z</published>
    <updated>2020-02-28T01:42:39.143Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="IDEA软件破解方法"><a href="#IDEA软件破解方法" class="headerlink" title="IDEA软件破解方法"></a>IDEA软件破解方法</h2><p><a href="jetbrains-agent.jar">破解包下载</a><br>1.下载安装Idea软件，先试用方式进入，然后修改help-&gt;VMoption配置添加一行,指向破解包路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;bin&#x2F;jetbrains-agent.jar</span><br></pre></td></tr></table></figure><p>2.完全退出软件，重启输入下面两种其中一种方式即可<br>License server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;jetbrains-license-server</span><br></pre></td></tr></table></figure><p>Activation code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">520E5894E2-eyJsaWNlbnNlSWQiOiI1MjBFNTg5NEUyIiwibGljZW5zZWVOYW1lIjoicGlnNiIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-DZ&#x2F;oNHBfyho0XrrCJJvAOKg5Q1tLBgOdbCmzCKwkuM+Yryce0RoOi3OOmH6Ba&#x2F;uTcCh&#x2F;L37meyD0FJdJIprv59y4+n+k2kIeF&#x2F;XKrKqg0dEsDUQRw0lUqqMt99ohqa+zmbJ44Yufdwwx&#x2F;F1CtoRGvEQ2Mn0QjuqRoZJZ3wiT5Am22JiJW8MaNUl3wg9YPj+OPGARKKJUdUJ0NGUDQBcBAv5ds8LhbSbJSbPkbkwH&#x2F;a1QMz4nEdn6lRDKI1aFIn43QhBSCFqvUq6TPJlbIJ0ZjE+PyZjHFBKCgkry0DHPXU2BbtIZPsksQnN3fx240a9K6sN7peZnLpEoMoq23FEz4g&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG&#x2F;PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg&#x2F;nYV31HLF7fJUAplI&#x2F;1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4&#x2F;G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd&#x2F;GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt&#x2F;wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59&#x2F;THOT7NJQhr6AyLkhhJCdkzE2cob&#x2F;KouVp4ivV7Q3Fc6HX7eepHAAF&#x2F;DpxwgOrg9smX6coXLgfp0b1RU2u&#x2F;tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB&#x2F;40BjpMUrDRCeKuiBahC0DCoU&#x2F;4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV&#x2F;g&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="参考文件" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="Idea破解" scheme="http://yoursite.com/tags/Idea%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Mac本连接pptp协议VPN问题</title>
    <link href="http://yoursite.com/2020/02/11/Mac%E6%9C%AC%E8%BF%9E%E6%8E%A5pptp%E5%8D%8F%E8%AE%AEVPN%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/02/11/Mac%E6%9C%AC%E8%BF%9E%E6%8E%A5pptp%E5%8D%8F%E8%AE%AEVPN%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-11T08:00:47.000Z</published>
    <updated>2020-02-28T01:42:39.141Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Mac连接pptp协议VPN解决办法"><a href="#Mac连接pptp协议VPN解决办法" class="headerlink" title="Mac连接pptp协议VPN解决办法"></a>Mac连接pptp协议VPN解决办法</h1><p>系统偏好设置 -&gt; 网络 -&gt; “+” 。<br>接⼝选择”VPN”，VPN类型选择”IPSec上的L2TP”，填写服务名称（任意）。<br>对刚创建的VPN进⾏配置，根据实际vpn地址填写服务地址、账户名称。<br>鉴定设置… -&gt; 用户鉴定中，勾选密码，填写vpn密码，保存关闭。<br>创建文件/etc/ppp/options,并进⾏编辑，vim /etc/ppp/options输入如下内容并保存：<br>plugin L2TP.ppp<br>l2tpnoipsec<br>此时连接VPN即可正常访问。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="参考文件" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/"/>
    
      <category term="Mac" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/Mac/"/>
    
    
      <category term="pptp" scheme="http://yoursite.com/tags/pptp/"/>
    
      <category term="VPN" scheme="http://yoursite.com/tags/VPN/"/>
    
      <category term="MAC" scheme="http://yoursite.com/tags/MAC/"/>
    
  </entry>
  
  <entry>
    <title>Mac运行提示已损坏解决办法</title>
    <link href="http://yoursite.com/2020/02/10/Mac%E8%BF%90%E8%A1%8C%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2020/02/10/Mac%E8%BF%90%E8%A1%8C%E6%8F%90%E7%A4%BA%E5%B7%B2%E6%8D%9F%E5%9D%8F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-02-10T15:19:11.000Z</published>
    <updated>2020-02-28T01:44:52.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>###方法一：<br>1.开启安全隐私中的任何来源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure><p>2.上面那步还不可以就执行下面这句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine &#x2F;Applications&#x2F;WebStorm.app</span><br></pre></td></tr></table></figure><p>###方法二</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="参考文件" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/"/>
    
      <category term="Mac" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/Mac/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="已损坏" scheme="http://yoursite.com/tags/%E5%B7%B2%E6%8D%9F%E5%9D%8F/"/>
    
  </entry>
  
  <entry>
    <title>WebSocket、SockJs、STOMP三者关系</title>
    <link href="http://yoursite.com/2020/02/09/WebSocket%E3%80%81SockJs%E3%80%81STOMP%E4%B8%89%E8%80%85%E5%85%B3%E7%B3%BB/"/>
    <id>http://yoursite.com/2020/02/09/WebSocket%E3%80%81SockJs%E3%80%81STOMP%E4%B8%89%E8%80%85%E5%85%B3%E7%B3%BB/</id>
    <published>2020-02-09T07:13:00.000Z</published>
    <updated>2020-02-09T07:13:00.033Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="1-http与websocket"><a href="#1-http与websocket" class="headerlink" title="1.http与websocket"></a>1.http与websocket</h2><p>http超文本传输协议，当一个网页打开完成后，客户端和服务器之间用于传输http的TCP连接不会关闭，再次访问会继续使用这一条已经建立的连接，但是只能是客户端主动请求才能获取返回数据，后台服务器不能主动推送给客户端数据</p><p>websocket是html5新增加的特性之一，目的是浏览器与服务端建立全双工的通信方式，http与websocket都是基于TCP的，websocket可以看作是对http的一个补充升级</p><h2 id="2-SockJs"><a href="#2-SockJs" class="headerlink" title="2.SockJs"></a>2.SockJs</h2><p>SockJs是一个JavaScript库，为了应对许多浏览器不支持WebSocket协议的问题，设计了备选SockJs。如果浏览器不支持WebSocket，则会自动降为轮询的方式。</p><h2 id="3-STOMP"><a href="#3-STOMP" class="headerlink" title="3.STOMP"></a>3.STOMP</h2><p>STOMP是面向消息的简单文本协议，SockJS为Websocket提供了备选方案，但是无论哪种场景对于实际应用，这种通信形式层级都是底层的，STOMP来为客户端和服务端的通信增加适当的消息语义。</p><h2 id="4-WebSocket、SockJs、STOMP三者关系"><a href="#4-WebSocket、SockJs、STOMP三者关系" class="headerlink" title="4.WebSocket、SockJs、STOMP三者关系"></a>4.WebSocket、SockJs、STOMP三者关系</h2><p>简而言之，WebSocket 是底层协议，SockJS 是WebSocket 的备选方案，也是底层协议，而 STOMP 是基于 WebSocket（SockJS）的上层协议。</p><p>1、HTTP协议解决了 web 浏览器发起请求以及 web 服务器响应请求的细节，假设 HTTP 协议 并不存在，只能使用 TCP 套接字来 编写 web 应用。</p><p>2、直接使用 WebSocket（SockJS） 就很类似于 使用 TCP 套接字来编写 web 应用，因为没有高层协议，就需要我们定义应用间所发送消息的语义，还需要确保连接的两端都能遵循这些语义；</p><p>3、同HTTP在TCP 套接字上添加请求-响应模型层一样，STOMP在WebSocket 之上提供了一个基于帧的线路格式层，用来定义消息语义；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="websocket" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/websocket/"/>
    
    
      <category term="websocket" scheme="http://yoursite.com/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>Spring事务动态代理问题解析</title>
    <link href="http://yoursite.com/2020/01/16/Spring%E4%BA%8B%E5%8A%A1%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/01/16/Spring%E4%BA%8B%E5%8A%A1%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</id>
    <published>2020-01-16T08:48:43.000Z</published>
    <updated>2020-02-04T13:50:38.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="项目中事务常见问题"><a href="#项目中事务常见问题" class="headerlink" title="项目中事务常见问题"></a>项目中事务常见问题</h3><p>在项目实现中经常会出现各种层级调用然后事务混乱不知道会不会回滚，会不会影响其他任务处理事务</p><h3 id="Spring事务基于AOP动态代理"><a href="#Spring事务基于AOP动态代理" class="headerlink" title="Spring事务基于AOP动态代理"></a>Spring事务基于AOP动态代理</h3><p>Spring中事务是基于AOP实现的，AOP是基于动态代理，代理即代理模式，是基于类的。<br>例如我们自己项目中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:config proxy-target-class&#x3D;&quot;true&quot;&gt;</span><br><span class="line">    &lt;aop:pointcut id&#x3D;&quot;interceptorPointCuts&quot;</span><br><span class="line">        expression&#x3D;&quot;execution(* com.b2bex.*.service.*Manager.*(..)) or execution(* com.autozi.*.*.service.*Manager.*(..))&quot; &#x2F;&gt;</span><br><span class="line">    &lt;aop:advisor advice-ref&#x3D;&quot;txAdvice&quot;</span><br><span class="line">        pointcut-ref&#x3D;&quot;interceptorPointCuts&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;aop:config&gt;</span><br></pre></td></tr></table></figure><p>将Manager代码类都做为事务代理，其实就相当与每一个Manager类都是代理<br>则：有两个manager(A,B)，非代理的facade(C)</p><blockquote><p>A-&gt;B(自己处理异常并未抛给A)：不会回滚</p></blockquote><blockquote><p>A-&gt;B(发生异常抛给A)：会回滚</p></blockquote><blockquote><p>C(非代理)-&gt;A(发生异常抛给C)-&gt;B(发生异常抛给A)：A,B会回滚，但是C中的其他事务则不会回滚</p></blockquote><p>一个代理类的开始就是一个事务，多层调用是同一个事务，同一个事务传播多少层manager,只要有一个<code>事务代理</code>抛出异常，事务管理器就会标记回滚，最终这个事务发现回滚标记就会回滚</p>]]></content>
    
    <summary type="html">
    
      1.在项目实现中经常会出现各种层级调用然后事务混乱不知道会不会回滚，会不会影响其他任务处理事务&lt;br&gt; 2.简单解释项目中使用SpringAOP代理事务的特点
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="SpringAOP事务" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/SpringAOP%E4%BA%8B%E5%8A%A1/"/>
    
    
      <category term="事务" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>事务的锁机制</title>
    <link href="http://yoursite.com/2019/12/26/%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/12/26/%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/</id>
    <published>2019-12-26T07:37:09.000Z</published>
    <updated>2020-02-04T13:50:38.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>参考文件：<br><a href="https://blog.csdn.net/Michaeles/article/details/86222520" target="_blank" rel="noopener">乐观锁和悲观锁的原理及应用场景</a><br><a href="https://blog.csdn.net/qq_39445473/article/details/90488673" target="_blank" rel="noopener">并发事务导致的丢失更新及处理方式详解</a><br><a href="https://blog.csdn.net/puhaiyang/article/details/72284702" target="_blank" rel="noopener">对mysql乐观锁、悲观锁、共享锁、排它锁、行锁、表锁概念的理解</a><br><a href="https://www.jianshu.com/p/db5c964a61ee" target="_blank" rel="noopener">深入理解CAS（乐观锁）</a><br><a href="https://blog.csdn.net/C_J33/article/details/79487941" target="_blank" rel="noopener">数据库的锁机制及原理</a></p><h1 id="锁相关名词关系"><a href="#锁相关名词关系" class="headerlink" title="锁相关名词关系"></a>锁相关名词关系</h1><blockquote><p>悲观锁</p><blockquote><p> 读锁（S/共享锁）<br>  写锁（X/排它锁）<br>  在以上锁的基础上<br>    表锁：直接锁整张表<br>    页锁（Gap/间隙锁）：介于表锁与行锁之间，对一定条件范围<code>id&lt;100</code>过滤出来的数据加锁<br>    行锁：根据具体唯一索引条件<code>id=1</code>只锁表中相关具体行</p></blockquote></blockquote><blockquote><p>乐观锁</p><blockquote><p>MVCC（数据多版本并发控制）<br>  不用等待写锁释放，阻塞读锁保证数据可重复读的乐观锁实现方案</p></blockquote></blockquote><h2 id="悲观锁：一般通过锁机制抢先独占资源的方式来实现"><a href="#悲观锁：一般通过锁机制抢先独占资源的方式来实现" class="headerlink" title="悲观锁：一般通过锁机制抢先独占资源的方式来实现"></a>悲观锁：<code>一般通过锁机制抢先独占资源的方式来实现</code></h2><p>  每次访问数据都会悲观的认为别人会并发抢资源，并发情况严重，严防死守，每次访问都加锁。<br>  如：数据库的行锁，表锁，读锁，写锁以及java的synchronized同步块实现都是悲观锁。</p><h3 id="数据库的悲观锁"><a href="#数据库的悲观锁" class="headerlink" title="数据库的悲观锁"></a>数据库的悲观锁</h3><h4 id="读锁（共享锁）"><a href="#读锁（共享锁）" class="headerlink" title="读锁（共享锁）"></a>读锁（共享锁）</h4><p>select * from table <code>lock in share mode</code>; 加锁后同一资源<code>被读取时共享同一把锁</code></p><blockquote><p>资源加上共享锁后，update,insert,delete语句会自动加排它锁，就会冲突不能修改资源</p></blockquote><h4 id="写锁（排它锁）"><a href="#写锁（排它锁）" class="headerlink" title="写锁（排它锁）"></a>写锁（排它锁）</h4><p>select * from table <code>for update</code>; 加锁后同一资源<code>只能有一把锁</code></p><blockquote><p>读锁与读锁可以共存，读锁与写锁互斥，写锁与写锁互斥，如果资源加锁了，其他想访问资源的事务就需要一直等待，性能影响很大</p></blockquote><h3 id="代码的悲观锁"><a href="#代码的悲观锁" class="headerlink" title="代码的悲观锁"></a>代码的悲观锁</h3><h4 id="Synchronized"><a href="#Synchronized" class="headerlink" title="Synchronized"></a>Synchronized</h4><h2 id="乐观锁：查看获取到的资源信息和资源本身是否一致，是否被其他事务更新过"><a href="#乐观锁：查看获取到的资源信息和资源本身是否一致，是否被其他事务更新过" class="headerlink" title="乐观锁：查看获取到的资源信息和资源本身是否一致，是否被其他事务更新过"></a>乐观锁：<code>查看获取到的资源信息和资源本身是否一致，是否被其他事务更新过</code></h2><p>  每次访问数据都会乐观的认为没人抢占资源，只有在更新的时候才会去判断下在此期间是否有别的事务更新，如果被别人抢先更新了就返回错误信息，让客户自己处理</p><h3 id="数据库的乐观锁"><a href="#数据库的乐观锁" class="headerlink" title="数据库的乐观锁"></a>数据库的乐观锁</h3><h4 id="数据库版本号机制"><a href="#数据库版本号机制" class="headerlink" title="数据库版本号机制"></a>数据库版本号机制</h4><p>  在数据表中加上一个版本号version字段，表示数据被修改次数，每次修改都+1，当更新时对比手里的数据version和数据库的version相等才可以更新<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update table set x&#x3D;x+1, version&#x3D;version+1 where id&#x3D;#&#123;id&#125; and version&#x3D;#&#123;version&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="MVCC-数据多版本并发控制"><a href="#MVCC-数据多版本并发控制" class="headerlink" title="MVCC(数据多版本并发控制)"></a>MVCC(数据多版本并发控制)</h4><ul><li>由于悲观锁都只可以并发读，并不可以读写并发。也就是在有事务写数据时，读锁需要等待。</li><li>InnoDB引入了MVCC技术，属于乐观锁，实现了读写的非阻塞，它需要额外的存储空间，记录多版本数据，做更多的行检查工作，区分查询，但保证了读写不加锁，典型的以牺牲空间换取时间思想。</li><li>只在[READ-COMMITTED（读取已提交）][REPEATABLE-READ（可重复读）]两种隔离级别下生效</li></ul><h3 id="代码的乐观锁"><a href="#代码的乐观锁" class="headerlink" title="代码的乐观锁"></a>代码的乐观锁</h3><h4 id="CAS-compare-and-swap"><a href="#CAS-compare-and-swap" class="headerlink" title="CAS(compare and swap)"></a>CAS(compare and swap)</h4><p>参考：<br><a href="https://www.cnblogs.com/darrenqiao/p/9211447.html" target="_blank" rel="noopener">JAVA乐观锁实现-CAS</a><br><a href="https://www.jianshu.com/p/db5c964a61ee" target="_blank" rel="noopener">深入理解CAS（乐观锁）</a></p><p>CAS：一种有名的<code>无锁算法</code>，即不使用锁的也就是说不阻塞线程的情况下实现变量的同步</p><blockquote><p>CAS操作包含三个操作数——内存位置(V),预期原值(A),新值(B)。<br>  操作就是将内存位置的值更新为需要的新值<br>  但是条件必须是当前操作的预期原值必须和内存位置当前存放的值相同。<br>  否则会将最新的内存值更新到预期原值位置重新尝试，直到成功为止。</p></blockquote><p>总结：</p><ul><li>CAS是线程并发时运用到的一种技术</li><li>CAS是原子操作，保证并发安全，但是不能保证并发同步</li><li>CAS是CPU的一个指令（底层调用的是Native本地方法）</li><li>CAS是非阻塞的轻量级的乐观锁</li></ul><p>为什么使用CAS？<br><strong>例如</strong>：<br>一个变量count,两个线程分别进行10000次加减操作，正确结果应该是0。<br>但是普通<code>int count</code>，结果每次都不一样，原因是java编译执行文件是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;count +&#x3D; 1</span><br><span class="line">5: iconst_1&#x2F;&#x2F;将int型1推送到栈顶</span><br><span class="line">6: iadd&#x2F;&#x2F;将栈顶两个int数值相加然后推入栈顶</span><br><span class="line">7: putfield&#x2F;&#x2F;为指定的类的实例域赋值</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;count -&#x3D; 1</span><br><span class="line">5: iconst_1&#x2F;&#x2F;将int型1推送到栈顶</span><br><span class="line">6: isub&#x2F;&#x2F;将栈顶两个int数值相减然后推入栈顶</span><br><span class="line">7: putfield&#x2F;&#x2F;为指定的类的实例域赋值</span><br></pre></td></tr></table></figure><p>可以看出字节码执行指令是三条，会在中途切换线程，所以多线程切换，iconst_1会混乱，即更新不同步<br><strong>解决</strong>：<br>使用基于CAS实现的<code>AtomicInteger count</code>，虽然这样保证了同步数据的原子性但是循环时间开销比较大<br><strong>CAS缺点</strong>：</p><ul><li>ABA问题：内存对象A变B再变A，CAS会认为没有变化去更新值，实际有变化（使用AtomicStampedReference可以解决）</li><li>CPU资源消耗：一直和预期值不一样，自旋时间过长，消耗CPU资源，如果资源竞争激烈，多线程自旋长时间消耗资源</li><li>只操作一个变量：只能保证一个变量的原子性，不能保证整个代码块的原子性，如果需要保证多个变量共同的原子性，就不得不使用<code>Synchronized</code></li></ul><h2 id="乐观锁及悲观锁的应用场景"><a href="#乐观锁及悲观锁的应用场景" class="headerlink" title="乐观锁及悲观锁的应用场景"></a>乐观锁及悲观锁的应用场景</h2><p><font color="red" face="黑体">写入频繁，少量读取使用悲观锁</font><br>如果出现频繁写入的场景加锁，可以保证数据准确性，原子性。<br>但是如果出现频繁读取的场景加锁，每次读取都加锁，会增加大量锁的开销，锁的效果减少了并发，但每个线程都在等待锁的释放，高并发下锁时间长严重影响系统性能，资源消耗严重。<br><font color="red" face="黑体">读取频繁，少量写入使用乐观锁</font><br>一般只用在高并发及多读少写的场景，可以保证响应迅速。<br>如果出现在频繁写入的场景，并发场景多条记录只会成功一条，造成大面积失败，如果自旋处理继续修改，更会由于不断的失败自旋，消耗大量CPU资源，严重影响性能。</p>]]></content>
    
    <summary type="html">
    
      仅是分析锁含义及解决的问题和使用场景，！！！并未解释数据库事务隔离实现的详细原理！！！
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="事务" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="事务的锁机制" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/"/>
    
    
      <category term="事务" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>实用地址推荐</title>
    <link href="http://yoursite.com/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/"/>
    <id>http://yoursite.com/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/</id>
    <published>2019-12-20T07:35:27.000Z</published>
    <updated>2020-02-28T01:32:43.133Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h2><blockquote><p><a href="http://ifeve.com/" target="_blank" rel="noopener">并发编程网：并发相关资源学习</a><br><a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程：各语言基础教程</a><br><a href="https://www.baeldung.com" target="_blank" rel="noopener">外国学习网站：baeldung</a></p></blockquote><h2 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h2><p><a href="https://www.jianshu.com/p/ebe52d2d468f" target="_blank" rel="noopener">MarkDown语法大全</a></p><h2 id="系统镜像下载地址"><a href="#系统镜像下载地址" class="headerlink" title="系统镜像下载地址"></a>系统镜像下载地址</h2><blockquote><p>系统镜像：<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a><br>Docker镜像市场：<a href="http://hub.daocloud.io" target="_blank" rel="noopener">http://hub.daocloud.io</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F.png" alt="系统镜像"></p></blockquote><h2 id="电视剧视频地址"><a href="#电视剧视频地址" class="headerlink" title="电视剧视频地址"></a>电视剧视频地址</h2><blockquote><p>云播TV：<a href="http://www.yunbtv.com" target="_blank" rel="noopener">http://www.yunbtv.com</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/%E4%BA%91%E6%92%ADTV.png" alt="云播TV"></p></blockquote><h2 id="Maven公共仓库"><a href="#Maven公共仓库" class="headerlink" title="Maven公共仓库"></a>Maven公共仓库</h2><blockquote><p>Maven公共仓库：<a href="http://mvnrepository.com" target="_blank" rel="noopener">http://mvnrepository.com</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/maven%E4%BB%93%E5%BA%93.png" alt="Maven公共仓库"></p></blockquote><h2 id="在线Cron表达式生成器"><a href="#在线Cron表达式生成器" class="headerlink" title="在线Cron表达式生成器"></a>在线Cron表达式生成器</h2><blockquote><p>在线Cron表达式生成器：<a href="http://cron.qqe2.com" target="_blank" rel="noopener">http://cron.qqe2.com</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/%E5%9C%A8%E7%BA%BFCron%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%9F%E6%88%90%E5%99%A8.png" alt="在线Cron表达式生成器"></p></blockquote><h2 id="在线Api接口管理"><a href="#在线Api接口管理" class="headerlink" title="在线Api接口管理"></a>在线Api接口管理</h2><blockquote><p>在线Api接口管理：<a href="https://apizza.net" target="_blank" rel="noopener">https://apizza.net</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/api%E6%8E%A5%E5%8F%A3%E5%9C%A8%E7%BA%BF%E7%AE%A1%E7%90%86.png" alt="在线Api接口管理"></p></blockquote><h2 id="在线程序员速记"><a href="#在线程序员速记" class="headerlink" title="在线程序员速记"></a>在线程序员速记</h2><blockquote><p>在线程序员速记：<a href="https://www.sheetgit.com/" target="_blank" rel="noopener">https://www.sheetgit.com/</a><br><img src="/2019/12/20/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80%E6%8E%A8%E8%8D%90/%E5%9C%A8%E7%BA%BF%E7%A8%8B%E5%BA%8F%E5%91%98%E9%80%9F%E8%AE%B0.png" alt="在线程序员速记"><br>git 常用命令速查表<br><a href="https://www.sheetgit.com/sheets/0d7ce5911254db982aa7b1601fa0fa6d" target="_blank" rel="noopener">https://www.sheetgit.com/sheets/0d7ce5911254db982aa7b1601fa0fa6d</a><br><br>vim 命令速查表<br><a href="https://www.sheetgit.com/sheets/9e58d539d616e9bc68b8d729957ad0dc" target="_blank" rel="noopener">https://www.sheetgit.com/sheets/9e58d539d616e9bc68b8d729957ad0dc</a><br><br>linux 运维常用命令<br><a href="https://www.sheetgit.com/sheets/9f67af8c402a3368da98363e9c378f4e" target="_blank" rel="noopener">https://www.sheetgit.com/sheets/9f67af8c402a3368da98363e9c378f4e</a><br><br>Java常用的八种排序算法<br><a href="https://www.sheetgit.com/sheets/297e6c5d8a1172ee0ff635f616f04eba" target="_blank" rel="noopener">https://www.sheetgit.com/sheets/297e6c5d8a1172ee0ff635f616f04eba</a><br></p></blockquote><h2 id="算法动画演示"><a href="#算法动画演示" class="headerlink" title="算法动画演示"></a>算法动画演示</h2><blockquote><p>算法动画演示：<a href="http://algoanim.ide.sk/index.php?page=showanim&amp;id=63" target="_blank" rel="noopener">http://algoanim.ide.sk/index.php?page=showanim&amp;id=63</a></p></blockquote><h2 id="生成编译器Banner特殊文字"><a href="#生成编译器Banner特殊文字" class="headerlink" title="生成编译器Banner特殊文字"></a>生成编译器Banner特殊文字</h2><blockquote><p><a href="http://patorjk.com/software/taag/#p=display&f=Graffiti&t=Qi%20Hai%20Yang%20!" target="_blank" rel="noopener">生成编译器Banner特殊文字</a></p></blockquote><h2 id="在线工具箱"><a href="#在线工具箱" class="headerlink" title="在线工具箱"></a>在线工具箱</h2><blockquote><p><a href="https://tool.lu/" target="_blank" rel="noopener">在线工具箱</a></p></blockquote><h2 id="java知识点整理"><a href="#java知识点整理" class="headerlink" title="java知识点整理"></a>java知识点整理</h2><blockquote><p><a href="https://snailclimb.gitee.io/javaguide" target="_blank" rel="noopener">java知识点整理</a></p></blockquote><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><blockquote><p><a href="https://mm.edrawsoft.cn" target="_blank" rel="noopener">思维导图</a></p></blockquote><h2 id="流程图等各种图在线"><a href="#流程图等各种图在线" class="headerlink" title="流程图等各种图在线"></a>流程图等各种图在线</h2><blockquote><p><a href="https://www.processon.com" target="_blank" rel="noopener">流程图等各种图在</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      常用的一些实用网站地址
    
    </summary>
    
    
      <category term="参考文件" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="实用地址" scheme="http://yoursite.com/tags/%E5%AE%9E%E7%94%A8%E5%9C%B0%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>事务的四大隔离</title>
    <link href="http://yoursite.com/2019/12/20/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E9%9A%94%E7%A6%BB/"/>
    <id>http://yoursite.com/2019/12/20/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E9%9A%94%E7%A6%BB/</id>
    <published>2019-12-20T07:05:43.000Z</published>
    <updated>2020-02-04T13:50:38.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>参考文件：<br><a href="https://blog.csdn.net/qq_39445473/article/details/90488673" target="_blank" rel="noopener">并发事务导致的丢失更新及处理方式详解</a><br><a href="https://www.cnblogs.com/iwenwen/p/11052206.html" target="_blank" rel="noopener">Mysql 事务隔离级别(图文详解)</a></p><h1 id="事务的四大隔离"><a href="#事务的四大隔离" class="headerlink" title="事务的四大隔离"></a>事务的四大隔离</h1><p>隔离性：事务之间不互相干扰，但是由于访问同一数据源，则必然有干扰，所以需要通过锁机制保证事务隔离性</p><h2 id="并发事务所会引起的问题"><a href="#并发事务所会引起的问题" class="headerlink" title="并发事务所会引起的问题"></a>并发事务所会引起的问题</h2><ul><li><p>针对读操作<br>  1.脏读：两个事务运行中，其中事务一读取到了事务二修改但是并未提交的操作结果</p><table><thead><tr><th>时间</th><th>事务一</th><th>事务二</th></tr></thead><tbody><tr><td>T1</td><td>开启事务</td><td>开启事务</td></tr><tr><td>T2</td><td>查询账户余额为100</td><td>查询账户余额为100</td></tr><tr><td>T3</td><td></td><td>修改账户余额为99</td></tr><tr><td>T4</td><td><font color="red" face="黑体">查询账户余额为99</font></td><td></td></tr><tr><td>T5</td><td>提交事务</td><td>提交事务</td></tr></tbody></table><p>  注：<code>T4时间，事务一读取到了事务二没有提交的变更</code><br>  2.不可重复读：指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据并且做了修改提交了事务，则先前的事务再次获取同一数据，结果却发生了变化。这就出现了一个事务内多次读取数据不一样的不可重复现象。</p><table><thead><tr><th>时间</th><th>事务一</th><th>事务二</th></tr></thead><tbody><tr><td>T1</td><td>开启事务</td><td>开启事务</td></tr><tr><td>T2</td><td>查询账户余额为100</td><td>查询账户余额为100</td></tr><tr><td>T3</td><td></td><td>修改账户余额为99</td></tr><tr><td>T4</td><td></td><td>提交事务</td></tr><tr><td>T5</td><td><font color="red" face="黑体">查询账户余额为99</font></td><td></td></tr><tr><td>T6</td><td>提交事务</td><td></td></tr></tbody></table><p>  注：<code>T5时间，事务一读取到了事务二提交的变更，T2和T5两个时间事务一访问同样资源得到的结果不一样</code><br>  3.幻读：与<code>不可重复读</code>类似，只是<code>不可重复读</code>重点放在了数据的修改上，也就是数据内容的变化，而<code>幻读</code>重点是在新增和删除，也就是数据数量的变化</p></li><li><p>针对写操作<br>  4.丢失修改：<br>  1.回滚丢失：指两个事务访问同一数据源，其中一个事务修改内容并提交成功，但是另一个事务失败回滚到了事务最开始的数据，覆盖了成功事务的修改操作</p><table><thead><tr><th>时间</th><th>事务一</th><th>事务二</th></tr></thead><tbody><tr><td>T1</td><td>开启事务</td><td>开启事务</td></tr><tr><td>T2</td><td>查询账户余额为100</td><td>查询账户余额为100</td></tr><tr><td>T3</td><td>修改账户余额为97</td><td>修改账户余额为99</td></tr><tr><td>T4</td><td>提交事务失败并回滚</td><td>提交事务成功</td></tr><tr><td>T5</td><td><font color="red" face="黑体">账户余额恢复到100</font></td><td></td></tr></tbody></table><p>  注：<code>T5时间，事务一失败回滚到了事务一开启时的余额100，覆盖了事务二成功的99余额。</code><br>  <font color="red" face="黑体">目前所有的隔离界别都不允许这一类丢失发生。</font><br>  2.覆盖丢失：指两个事务访问同一数据源，后成功的修改事务覆盖了先成功的修改事务，导致先修改的事务丢失。</p><table><thead><tr><th>时间</th><th>事务一</th><th>事务二</th></tr></thead><tbody><tr><td>T1</td><td>开启事务</td><td>开启事务</td></tr><tr><td>T2</td><td>查询账户余额为100</td><td>查询账户余额为100</td></tr><tr><td>T3</td><td>修改账户余额-3为97</td><td>修改账户余额-1为99</td></tr><tr><td>T4</td><td></td><td>提交事务成功</td></tr><tr><td>T5</td><td>提交事务成功</td><td></td></tr><tr><td>T6</td><td><font color="red" face="黑体">账户余额为97</font></td><td></td></tr></tbody></table><p>  注：<code>T6时间，事务一的97覆盖了事务二的99，正常操作应该是96=100-1(事务二)-3(事务一)。</code></p></li></ul><h2 id="针对各种读冲突操作问题衍生的四种隔离级别"><a href="#针对各种读冲突操作问题衍生的四种隔离级别" class="headerlink" title="针对各种读冲突操作问题衍生的四种隔离级别"></a>针对各种读冲突操作问题衍生的四种隔离级别</h2><ul><li>READ-UNCOMMITTED（读取未提交）：允许读取尚未提交事务的变更信息。（只要改了就能看到）</li><li>READ-COMMITTED（读取已提交）：允许读取已经提交事务的变更信息。（只要提交就能看到）</li><li>REPEATABLE-READ（可重复读）：在同一事务内的读取结果只会受当前事务的修改影响，幻读仍有可能发生。（事务独立不受其他任何事务影响，幻读除外）</li><li>SERIALIZABLE（可串行化）：所有事务依次逐个执行，完全不互相干扰。<table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>READ-UNCOMMITTED</td><td>√</td><td>√</td><td>√</td></tr><tr><td>READ-COMMITTED</td><td>×</td><td>√</td><td>√</td></tr><tr><td>REPEATABLE-READ</td><td>×</td><td>×</td><td>√</td></tr><tr><td>SERIALIZABLE</td><td>×</td><td>×</td><td>×</td></tr></tbody></table></li></ul><h2 id="针对写操作冲突问题的处理方案"><a href="#针对写操作冲突问题的处理方案" class="headerlink" title="针对写操作冲突问题的处理方案"></a>针对写操作冲突问题的处理方案</h2><a href="/2019/12/26/%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%94%81%E6%9C%BA%E5%88%B6/" title="引入锁的机制对资源进行限制">引入锁的机制对资源进行限制</a>]]></content>
    
    <summary type="html">
    
      分析事务隔离级别及解决的问题
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="事务" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="事务四大隔离" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E5%9B%9B%E5%A4%A7%E9%9A%94%E7%A6%BB/"/>
    
    
      <category term="事务" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>事务的四大特性</title>
    <link href="http://yoursite.com/2019/12/19/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2019/12/19/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/</id>
    <published>2019-12-19T09:21:51.000Z</published>
    <updated>2020-02-04T13:50:38.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="事务的四大特性"><a href="#事务的四大特性" class="headerlink" title="事务的四大特性"></a>事务的四大特性</h1><h2 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h2><p>同一事务内的不同操作，属于同一个原子包，要么全部成功，要不全部失败，<code>同生死，共进退</code></p><h2 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h2><p>一个事务一个原子包，原子性就算是同生死，计算机指令也是有个先后执行顺序的，也就是说就算都死也有个死的顺序。一致性则保证了数据库事务操作只存在事务提交前和事务提交后两个数据库状态，不会出现事务进行到一半读取到中间的状态信息，也就是保证不存在刚死一半就被读取到</p><h2 id><a href="#" class="headerlink" title></a><a href="/2019/12/20/%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E5%A4%A7%E9%9A%94%E7%A6%BB/" title="隔离性">隔离性</a></h2><p>隔离主要隔离的是事务，并发情况下，多个事务就是多个原子包，每个事务之间不互相干扰，但是由于多个事务操作的是同一个数据源，不同事务之间为了保证隔离性，就会延伸出通过不同的隔离级别进行控制隔离</p><h2 id="持久性"><a href="#持久性" class="headerlink" title="持久性"></a>持久性</h2><p>当一个事务提交了，数据库状态就会永久性的发生变化，哪怕是停电了，宕机了，也是确确实实提交了，就永远的固化了，除非毁了硬盘</p>]]></content>
    
    <summary type="html">
    
      事务具备的四大特性详解
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="事务" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="事务四大特性" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
    
    
      <category term="事务" scheme="http://yoursite.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>位运算</title>
    <link href="http://yoursite.com/2019/12/13/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2019/12/13/%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2019-12-13T08:11:46.000Z</published>
    <updated>2020-02-04T13:50:38.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>在计算机中数值的运算<code>一律用补码运算</code>，表示和存储，原码是人脑最容易理解和计算的表示方式<br>    为什么都是补码呢，因为在计算机中就是0/1表示，没有正负区分，全用补码则<br>    可以将符号位与数值域统一处理,加减法也可以统一处理，并且原码与补码相互转换<br>    的运算过程是一模一样的不需要额外硬件电路<br>    （原码的反码+1=补码，补码的反码+1=原码）</p><h3 id="原码-反码-补码"><a href="#原码-反码-补码" class="headerlink" title="原码/反码/补码"></a>原码/反码/补码</h3><p>原码：<br>    计算机对数字二进制制定的表示方法，最高位为符号位，正数0，负数1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+1：00000000 00000000 00000000 00000001</span><br><span class="line"> -1：10000000 00000000 00000000 00000001</span><br></pre></td></tr></table></figure><p>反码：<br>    正数的反码和原码一样负数的反码是保持符号位不变，其余位取反</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+1：00000000 00000000 00000000 00000001</span><br><span class="line"> -1：11111111 11111111 11111111 11111110</span><br></pre></td></tr></table></figure><p>补码：<br>    正数的补码和原码一样负数的补码是原码的反码+1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+1：00000000 00000000 00000000 00000001</span><br><span class="line"> -1：11111111 11111111 11111111 11111111</span><br></pre></td></tr></table></figure><h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><h4 id="（1）按位与操作-amp"><a href="#（1）按位与操作-amp" class="headerlink" title="（1）按位与操作 &amp;"></a>（1）按位与操作 &amp;<br></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">33 &amp; -34</span><br><span class="line"> 33：00000000 00000000 00000000 00100001</span><br><span class="line">-34：10000000 00000000 00000000 00100010</span><br><span class="line">    反码11111111 11111111 11111111 11011101</span><br><span class="line">    补码11111111 11111111 11111111 11011110</span><br><span class="line">则：</span><br><span class="line">      00000000 00000000 00000000 00100001 </span><br><span class="line">  &amp; 11111111 11111111 11111111 11011110</span><br><span class="line">  &#x3D; 00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure><p>   所以：33 &amp; -34 = 0<br>   结论：两位都为1结果为1，其他情况为0（<code>有0就是0，没0才是1</code>）</p><h4 id="（2）按位或操作"><a href="#（2）按位或操作" class="headerlink" title="（2）按位或操作 |"></a>（2）按位或操作 |</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 33 | -34</span><br><span class="line">  33：00000000 00000000 00000000 00100001</span><br><span class="line"> -34：10000000 00000000 00000000 00100010</span><br><span class="line">     反码11111111 11111111 11111111 11011101</span><br><span class="line">     补码11111111 11111111 11111111 11011110</span><br><span class="line"> 则：</span><br><span class="line">     00000000 00000000 00000000 00100001 </span><br><span class="line">   | 11111111 11111111 11111111 11011110</span><br><span class="line">  &#x3D; 11111111 11111111 11111111 11111111</span><br><span class="line">补码11111111 11111111 11111111 11111111</span><br><span class="line">反码10000000 00000000 00000000 00000000</span><br><span class="line">原码10000000 00000000 00000000 00000001</span><br></pre></td></tr></table></figure><p>   所以：33 | -34 = -1<br>   结论：有至少有1位为1结果就为1，两位都为0结果为0（<code>有1就是1，没1才是0</code>）</p><h4 id="（3）按位非操作"><a href="#（3）按位非操作" class="headerlink" title="（3）按位非操作 ~"></a>（3）按位非操作 ~</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~(-34)</span><br><span class="line">-34：10000000 00000000 00000000 00100010</span><br><span class="line">    反码11111111 11111111 11111111 11011101</span><br><span class="line">    补码11111111 11111111 11111111 11011110</span><br><span class="line">则：</span><br><span class="line">  ~ 11111111 11111111 11111111 11011110 </span><br><span class="line">  &#x3D; 00000000 00000000 00000000 00100001 &#x3D; 33</span><br></pre></td></tr></table></figure><p>   所以：~(-34) = 33<br>   结论：原来为1结果为0，原来为0结果为1(<code>所有位包括符号位全部取反</code>)</p><h4 id="（4）按位异或操作"><a href="#（4）按位异或操作" class="headerlink" title="（4）按位异或操作 ^"></a>（4）按位异或操作 ^</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">33 ^ -34</span><br><span class="line"> 33：00000000 00000000 00000000 00100001</span><br><span class="line">-34：10000000 00000000 00000000 00100010</span><br><span class="line">    反码11111111 11111111 11111111 11011101</span><br><span class="line">    补码11111111 11111111 11111111 11011110</span><br><span class="line">则：</span><br><span class="line">     00000000 00000000 00000000 00100001 </span><br><span class="line">  ^ 11111111 11111111 11111111 11011110</span><br><span class="line">  &#x3D; 11111111 11111111 11111111 11111111</span><br><span class="line">补码11111111 11111111 11111111 11111111</span><br><span class="line">反码10000000 00000000 00000000 00000000</span><br><span class="line">原码10000000 00000000 00000000 00000001</span><br></pre></td></tr></table></figure><p>   所以：33 ^ -34 = -1<br>   结论：<code>两位相同则为0，不同则为1</code></p><h4 id="（5）位移运算"><a href="#（5）位移运算" class="headerlink" title="（5）位移运算"></a>（5）位移运算</h4><h5 id="a-左移操作（整体向左移动，低位补0）"><a href="#a-左移操作（整体向左移动，低位补0）" class="headerlink" title="a. 左移操作（整体向左移动，低位补0）"></a>a. 左移操作（整体向左移动，低位补0）</h5><p>15(左操作数) &lt;&lt;(移位操作符) 34(右操作数)<br>移位操作：</p><blockquote><p>右操作数char,byte,short类型移位操作前会自动转换为<code>int,并且只有右侧5个低位有用</code>，这样为了防止移动不切实际的位数如果是long型，则得到的结果也是<code>long,并且只有右侧6个低位有用</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">15 &lt;&lt; 34</span><br><span class="line">首先右操作数34，二进制表示为</span><br><span class="line">    00000000 00000000 00000000 00100010</span><br><span class="line">    只取右侧5位为00010，结果为2</span><br><span class="line">左操作数15，二进制表示为</span><br><span class="line">    00000000 00000000 00000000 00001111</span><br><span class="line">所以实际移动：</span><br><span class="line">    15左移2位 &#x3D; 00000000 00000000 00000000 00111100</span><br><span class="line">                &#x3D; 60</span><br></pre></td></tr></table></figure><h5 id="b-右移操作（整体向右移动，正数高位补0，负数高位补1）"><a href="#b-右移操作（整体向右移动，正数高位补0，负数高位补1）" class="headerlink" title="b:右移操作（整体向右移动，正数高位补0，负数高位补1）"></a>b:右移操作（整体向右移动，正数高位补0，负数高位补1）</h5><p>-15(左操作数) &gt;&gt;(移位操作符) 34(右操作数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">首先右操作数34，二进制表示为</span><br><span class="line">    00000000 00000000 00000000 00100010</span><br><span class="line">    只取右侧5位为00010，结果为2</span><br><span class="line">左操作数-15，二进制表示为:</span><br><span class="line">    原码：10000000 00000000 00000000 00001111</span><br><span class="line">    反码：11111111 11111111 11111111 11110000</span><br><span class="line">    补码：11111111 11111111 11111111 11110001</span><br><span class="line">机器位运算都是用补码则，所以实际移动</span><br><span class="line">    11111111 11111111 11111111 11110001右移2位</span><br><span class="line">    负数高位补位1，结果是</span><br><span class="line">        11111111 11111111 11111111 11111100</span><br><span class="line">补码：11111111 11111111 11111111 11111100</span><br><span class="line">反码：10000000 00000000 00000000 00000011</span><br><span class="line">原码：10000000 00000000 00000000 00000100</span><br><span class="line">-15右移2位&#x3D;-4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      位运算详细计算过程
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="位运算" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    
      <category term="位运算" scheme="http://yoursite.com/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="原码" scheme="http://yoursite.com/tags/%E5%8E%9F%E7%A0%81/"/>
    
      <category term="反码" scheme="http://yoursite.com/tags/%E5%8F%8D%E7%A0%81/"/>
    
      <category term="补码" scheme="http://yoursite.com/tags/%E8%A1%A5%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + git线上版本管理建立个人博客</title>
    <link href="http://yoursite.com/2019/12/13/Hexo-git%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/12/13/Hexo-git%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-13T02:23:28.000Z</published>
    <updated>2020-02-04T13:57:21.355Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="搭建个人博客"><a href="#搭建个人博客" class="headerlink" title="搭建个人博客"></a>搭建个人博客</h2><p>参考文章：<br>码云 + Hexo 搭建个人博客：<a href="https://blog.csdn.net/weidong_y/article/details/90904781" target="_blank" rel="noopener">https://blog.csdn.net/weidong_y/article/details/90904781</a></p><h3 id="使用Gitee-Github线上版本管理内置的pages创建仓库"><a href="#使用Gitee-Github线上版本管理内置的pages创建仓库" class="headerlink" title="使用Gitee/Github线上版本管理内置的pages创建仓库"></a>使用Gitee/Github线上版本管理内置的pages创建仓库</h3><p>Gitee生成仓库pages：注意<code>使用用户名同名仓库才可以用 name.gitee.io 一级域名访问</code><br><br>    参考-<a href="https://blog.csdn.net/qq_36667170/article/details/79318578" target="_blank" rel="noopener">https://blog.csdn.net/qq_36667170/article/details/79318578</a><br><br>Github生成仓库Pages：注意<code>只能是 name.github.io格式仓库</code><br><br>    参考-<a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a><br></p><h3 id="使用Hexo创建博客"><a href="#使用Hexo创建博客" class="headerlink" title="使用Hexo创建博客"></a>使用Hexo创建博客</h3><h4 id="安装npm-Nodejs"><a href="#安装npm-Nodejs" class="headerlink" title="安装npm(Nodejs)"></a>安装npm(Nodejs)</h4><blockquote><p><a href="https://www.jianshu.com/p/f2592d106aac" target="_blank" rel="noopener">ubuntu安装最新版node和npm</a><br><br><a href="https://blog.csdn.net/han0373/article/details/80606487" target="_blank" rel="noopener">Windows安装使用npm（Nodejs）</a><br><a href="https://www.jianshu.com/p/3a8ea8c21543" target="_blank" rel="noopener">Mac- npm 安装与更新</a></p></blockquote><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><blockquote><p>npm install -g hexo-cli</p></blockquote><h4 id="开始配置Hexo"><a href="#开始配置Hexo" class="headerlink" title="开始配置Hexo"></a>开始配置Hexo</h4><h5 id="Hexo相关命令"><a href="#Hexo相关命令" class="headerlink" title="Hexo相关命令"></a>Hexo相关命令</h5><p>初始化：空文件夹下执行&gt;&gt;&gt;hexo init<br>创建新文章页：根目录中&gt;&gt;&gt;hexo new “文章名字”<br>创建新草稿页：根目录中&gt;&gt;&gt;hexo new draft “文章名字”<br>发布草稿文章：根目录下&gt;&gt;&gt;hexo publish “文章名字”<br>创建功能文件：根目录中&gt;&gt;&gt;hexo new page categories/tags (创建Hexo功能文件)<br>清空静态页面：根目录中&gt;&gt;&gt;hexo clean (部署不生效可以先clean下)<br>生成静态页面：根目录中&gt;&gt;&gt;hexo g<br>启动本地服务：根目录中&gt;&gt;&gt;hexo s<br>预览草稿服务：根目录中&gt;&gt;&gt;hexo s –draft<br>提交部署服务：根目录中&gt;&gt;&gt;hexo deploy</p><h5 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h5><ul><li>通过<a href="https://hexo.io/themes/找到想要的主题git路径" target="_blank" rel="noopener">https://hexo.io/themes/找到想要的主题git路径</a></li><li>在项目根目录下的themes文件夹中</li><li>执行git clone [主题git路径]<a href="https://github.com/theme-next/hexo-theme-next.git" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next.git</a></li></ul><h5 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h5><p>修改项目根目录下的_config.yml中theme为下载的主题文件夹名字</p><h5 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h5><p>方法一</p><ul><li>hexo new “文章名字”</li></ul><p>方法二</p><ul><li>直接创建md格式文件复制到/source/_posts目录下，文件头加入下面代码<br><code>冒号后面一定要跟一个空格</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: a</span><br><span class="line">date: 2019-04-14 23:10:17</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="文章引用图片"><a href="#文章引用图片" class="headerlink" title="文章引用图片"></a>文章引用图片</h5>前提：修改根目录下_config.yml中的<code>post_asset_folder: true</code>，new 新建的文章就会自动新建一个同名文件夹可以放资源</li></ul><ul><li>安装Hexo图片引用插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure></li><li>文章中引用图片<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片信息](文章名&#x2F;图片名.jpg)</span><br></pre></td></tr></table></figure></li></ul><h5 id="文章引用自己的文章链接"><a href="#文章引用自己的文章链接" class="headerlink" title="文章引用自己的文章链接"></a>文章引用自己的文章链接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式: &#123;% post_link 文件名 链接文字 %&#125;, 链接文字可省略</span><br></pre></td></tr></table></figure><h5 id="主题风格"><a href="#主题风格" class="headerlink" title="主题风格"></a>主题风格</h5><p>主题文件下的_config.yml<code>注意：不是根目录是主题目录：/themes/主题文件夹名称/_config.yml</code><br>找到Schemes模块，修改为scheme: Gemini</p><h5 id="添加评论功能插件"><a href="#添加评论功能插件" class="headerlink" title="添加评论功能插件"></a>添加评论功能插件</h5><p><a href="https://www.cnblogs.com/Timesi/p/9556236.html" target="_blank" rel="noopener">Leancloud+Valine打造Hexo个人博客极简评论系统</a></p><h5 id="统计功能"><a href="#统计功能" class="headerlink" title="统计功能"></a>统计功能</h5><p><a href="https://www.jianshu.com/p/81626e0d7d29" target="_blank" rel="noopener">hexo 集成 字数统计插件</a><br><a href="https://www.jianshu.com/p/baea8c95e39b" target="_blank" rel="noopener">Hexo添加字数统计、阅读时长</a></p><h5 id="文章底部分享栏"><a href="#文章底部分享栏" class="headerlink" title="文章底部分享栏"></a>文章底部分享栏</h5><p>主题目录下的_config.yml，定位到<code>baidushare</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidushare:</span><br><span class="line">  type: button</span><br></pre></td></tr></table></figure><p>注意：Gemini这个主题的样式可能隐藏了baidushare不显示，需要去掉主题目录下/source/css/_schemes/Gemini/index.styl中的hide，并且<a href="http://bdimg.share.baidu.com/static/api/js/share.js不支持https,需要参考https://github.com/hrwhisper/baiduShare" target="_blank" rel="noopener">http://bdimg.share.baidu.com/static/api/js/share.js不支持https,需要参考https://github.com/hrwhisper/baiduShare</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.post-spread &#123;</span><br><span class="line">  &#x2F;&#x2F; hide();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="增加歌单页面"><a href="#增加歌单页面" class="headerlink" title="增加歌单页面"></a>增加歌单页面</h5><ul><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure></li><li>添加歌单页<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page playlist</span><br></pre></td></tr></table></figure></li><li>新生成的根目录下/source/playlist/index.md<br>meting标签具体详细参数参考：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-aplayer</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 歌单</span><br><span class="line">date: 2019-12-23 11:17:35</span><br><span class="line">type: &quot;playlist&quot;</span><br><span class="line">---</span><br><span class="line">&#123;% meting &quot;996769039&quot; &quot;xiami&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure></li><li>在根目录<code>_config.yml</code>中添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 音乐</span><br><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure></li><li>在主题目录下<code>_config.yml</code>添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  playlist: &#x2F;playlist&#x2F;|| music</span><br></pre></td></tr></table></figure></li><li>在<code>zh-Hans.yml</code>中找到menu添加中文显示<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  playlist: 歌单</span><br></pre></td></tr></table></figure></li></ul><h5 id="博客左侧栏设置"><a href="#博客左侧栏设置" class="headerlink" title="博客左侧栏设置"></a>博客左侧栏设置</h5><p>参考文件:<a href="https://www.jianshu.com/p/d1dedae4d970" target="_blank" rel="noopener">hexo文件参数及其相关说明</a><br><br>/_config.yml文件配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 个人博客（网站标题）</span><br><span class="line">subtitle: hineqi.github.io（名字下显示的小标题）</span><br><span class="line">description: 记录下自己的动态（描述内容）</span><br><span class="line">keywords: （搜录百度google后的搜索关键词）</span><br><span class="line">author: 齐海阳（作者）</span><br><span class="line">language: zh-Hans（网站使用的语言,默认是英语(主题languages文件夹下)）</span><br><span class="line">timezone: &#39;&#39;（网站时区，Hexo 默认使用电脑的时区）</span><br></pre></td></tr></table></figure><h5 id="分类设置"><a href="#分类设置" class="headerlink" title="分类设置"></a>分类设置</h5><p>参考：<a href="https://www.jianshu.com/p/bff1b1845ac9" target="_blank" rel="noopener">Hexo 一篇文章多个 categories</a></p><ul><li>在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 source 文件夹中新建一个 categories 文件夹。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure></li><li>打开 categories 文件夹中的 index.md 文件，添加 type 字段，设置为 “categories”。</li><li>接着到主题文件夹下的 _config.yml 配置文件下，找到 menu 模块，把 categories 的注释给去掉。<br><br><code>tags同理 注意：所有文章头部都要添加categories及内容就可以自动分类，zh-Hans.yml语言下需要把menu 模块空格去掉</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo + git线上版本管理建立个人博客</span><br><span class="line">date: 2019-12-13 10:23:28</span><br><span class="line">tags: [Hexo,博客]</span><br><span class="line">categories: [学习,参考,帮助文档]</span><br><span class="line">或</span><br><span class="line">tags: </span><br><span class="line">    - Hexo</span><br><span class="line">    - 博客</span><br><span class="line">categories: </span><br><span class="line">    - [学习,博客]   （学习.博客这种子集目录）</span><br><span class="line">    - [参考]       </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h5><h6 id="Hexo博客添加站内搜索"><a href="#Hexo博客添加站内搜索" class="headerlink" title="Hexo博客添加站内搜索"></a>Hexo博客添加站内搜索</h6>要看主题支持什么搜索，NexT主题支持Swiftype/微搜索/Local Search/Algolia<br>下面介绍Local Search<code>安装在根目录</code></li></ul><ul><li>安装<code>hexo-generator-search</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li><li>安装<code>hexo-generator-searchdb</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li>根目录下的<code>_config.yml</code>配置文件末尾添加如下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li>编辑主题文件下<code>_config.yml</code>配置文件，设置<code>Local search</code>模块下<code>enable</code>为<code>true</code><h6 id="博客头像设置"><a href="#博客头像设置" class="headerlink" title="博客头像设置"></a>博客头像设置</h6></li><li>主题文件下<code>_config.yml</code>配置文件，<code>Sidebar Avatar</code>模块下<code>avatar</code>的<code>url</code>设置为图像链接<br>或者主题文件下/source/images中添加图片文件，然后<code>url</code>内容为<code>/images/图片名称.png</code><h6 id="设置头像圆角并旋转打开"><a href="#设置头像圆角并旋转打开" class="headerlink" title="设置头像圆角并旋转打开"></a>设置头像圆角并旋转打开</h6></li><li>打开主题文件夹的<code>source\css\_common\components\sidebar</code>目录下的<code>sidebar-author.styl</code>文件，然后把下面的代码添加进去即可。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="右上角fork-me设置"><a href="#右上角fork-me设置" class="headerlink" title="右上角fork me设置"></a>右上角fork me设置</h6></li><li>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>上选择喜欢的挂饰，复制代码</li><li>打开主题目录下layout文件夹下_layout.swig,<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;标签后</code>粘贴上面代码，href改为自己github链接<h6 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h6></li><li>修改主题目录下_config.yml下的canvas_nest为true</li><li>或打开主题目录下layout文件夹的_layout.swig,文末加上下面代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 动态背景 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;canvas-nest.js&#x2F;1.0.0&#x2F;canvas-nest.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h6 id="背景图片设置"><a href="#背景图片设置" class="headerlink" title="背景图片设置"></a>背景图片设置</h6></li><li>打开主题目录下source/css/_custom/custom.styl文件<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/bg.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">    <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:center;</span><br><span class="line">    // 设置主题部分的透明度，具体看图</span><br><span class="line">    <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="点击出现桃心效果设置"><a href="#点击出现桃心效果设置" class="headerlink" title="点击出现桃心效果设置"></a>点击出现桃心效果设置</h6></li><li>主题文件目录/source/js/src新建clicklove.js,将下面代码copy进去<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></li><li>然后主题目录下/layout/_layout.swig末尾加上下面代码<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clicklove.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="首页文章预览设置"><a href="#首页文章预览设置" class="headerlink" title="首页文章预览设置"></a>首页文章预览设置</h6></li><li><code>&lt;!--more--&gt;</code>手动切断</li><li>添加<code>description</code><br>  在文章的 front-matter 中添加 description 和 photos 字段</li><li>自动形成摘要，在主题目录下_config.yml添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><h6 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h6>修改主题目录下/source/css/_common/components/post/post.styl文末添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3; &#x2F;&#x2F;原始链接颜色</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3; &#x2F;&#x2F;底部分割线颜色</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423; &#x2F;&#x2F;鼠标经过颜色</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423; &#x2F;&#x2F;底部分割线颜色</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="修改文章底部标签样式"><a href="#修改文章底部标签样式" class="headerlink" title="修改文章底部标签样式"></a>修改文章底部标签样式</h6>修改主题目录下/layout/_macro/post.swig中，搜索<code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code><h6 id="在文章末尾添加“文章结束”标记"><a href="#在文章末尾添加“文章结束”标记" class="headerlink" title="在文章末尾添加“文章结束”标记"></a>在文章末尾添加“文章结束”标记</h6></li><li>主题目录下/layout/_macro文件夹中新建passage-end-tag.swig文件</li><li>passage-end-tag.swig中添加以下内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class&#x3D;&quot;fa fa-paw&quot;&gt;&lt;&#x2F;i&gt;感谢您的阅读-------------&lt;&#x2F;div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li><li>修改主题目录下/layout/_macro/post.swig，在<code>post-body</code>之后，<code>post-footer</code>之前<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li><li>修改主题目录下/_config.yml，末尾添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h6 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h6>主题目录下/source/css/_custom/custom.styl，添加以下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h6 id="添加网页顶部进度加载条"><a href="#添加网页顶部进度加载条" class="headerlink" title="添加网页顶部进度加载条"></a>添加网页顶部进度加载条</h6>主题目录下_config.yml，搜索<code>pace</code><h6 id="RSS设置"><a href="#RSS设置" class="headerlink" title="RSS设置"></a>RSS设置</h6></li><li>在根目录安装hexo插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li>安装后在根目录_config.yml末尾加下面代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li>在主题目录下_config.yml中找到rss，在后面加上 /atom.xml<h6 id="社交小图标设置"><a href="#社交小图标设置" class="headerlink" title="社交小图标设置"></a>社交小图标设置</h6></li><li>在主题目录下_config.yml中搜索Social</li><li>图标可以在<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">Font Awesome Icon</a>查找<br>中文<a href="http://www.fontawesome.com.cn" target="_blank" rel="noopener">Font Awesome Icon</a><h6 id="友情链接设置"><a href="#友情链接设置" class="headerlink" title="友情链接设置"></a>友情链接设置</h6></li><li>在主题目录下_config.yml中搜索links_title<h6 id="去掉底部Hexo相关信息"><a href="#去掉底部Hexo相关信息" class="headerlink" title="去掉底部Hexo相关信息"></a>去掉底部Hexo相关信息</h6>在主题目录下/layout/_partials/footer.swig注释相关代码<h6 id="添加底部桃心"><a href="#添加底部桃心" class="headerlink" title="添加底部桃心"></a>添加底部桃心</h6></li><li>直接修改主题目录下_config.yml中的footer下icon</li><li>或在主题目录下/layout/_partials/footer.swig，搜索with-love，在<a href="https://fontawesome.com/icons?d=gallery&q=heart" target="_blank" rel="noopener">fontawesom</a>上找到喜欢的图标<h6 id="设置网站Favicon"><a href="#设置网站Favicon" class="headerlink" title="设置网站Favicon"></a>设置网站Favicon</h6></li><li>在<a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a" target="_blank" rel="noopener">阿里巴巴矢量图库</a>中找图片替换主题目录下/source/images里三张图<br><code>apple-touch-icon-next.png</code>,<code>favicon-16x16-next.png</code>,<code>favicon-32x32-next.png</code></li><li>或修改主题目录下_config.yml的favicon<h6 id="博客置顶设置"><a href="#博客置顶设置" class="headerlink" title="博客置顶设置"></a>博客置顶设置</h6></li><li>安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></li><li>在置顶文章头部添加<code>top</code>,数值越大越靠前<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: this is my first blog</span><br><span class="line">date: 2019-04-14</span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li>主题目录下/layout/_macro/post.swig，定位到post-header<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-thumb-tack&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;font color&#x3D;7D26CD&gt;置顶&lt;&#x2F;font&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h6 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h6></li><li>在主题目录下/layout/_macro/下添加文件<code>my-copyright.swig</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class&#x3D;&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;clipboard.js&#x2F;1.5.10&#x2F;clipboard.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;2.0.0&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;sweetalert&#x2F;dist&#x2F;sweetalert.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#x2F;&quot; title&#x3D;&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;&#x2F;span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;&#x2F;span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;&#x2F;span&gt;&lt;a href&#x3D;&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title&#x3D;&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;copy-path&quot;  title&#x3D;&quot;点击复制文章链接&quot;&gt;&lt;i class&#x3D;&quot;fa fa-clipboard&quot; data-clipboard-text&#x3D;&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label&#x3D;&quot;复制成功！&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;&#x2F;span&gt;&lt;i class&#x3D;&quot;fa fa-creative-commons&quot;&gt;&lt;&#x2F;i&gt; &lt;a rel&#x3D;&quot;license&quot; href&#x3D;&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-nd&#x2F;4.0&#x2F;&quot; target&#x3D;&quot;_blank&quot; title&#x3D;&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;&#x2F;a&gt; 转载请保留原文链接及作者。&lt;&#x2F;p&gt;  </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard &#x3D; new Clipboard(&#39;.fa-clipboard&#39;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&#39;success&#39;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &#39;复制成功&#39;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li><li>在主题目录下/source/css/_common/components/post下添加文件<code>my-post-copyright.styl</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改主题目录下/layout/_macro/post.swig，<code>wechat_subscriber</code>上面<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &#39;my-copyright.swig&#39; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li><li>在主题文件/source/css/_common/components/post/post.styl末尾添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure></li><li>在文章头部添加<code>copyright</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo-NexT主题配置</span><br><span class="line">date: 2018-01-20 20:41:08</span><br><span class="line">categories: Hexo</span><br><span class="line">tags:</span><br><span class="line">- Hexo</span><br><span class="line">- NexT</span><br><span class="line">top: 100</span><br><span class="line">copyright: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h6 id="文章代码主题设置"><a href="#文章代码主题设置" class="headerlink" title="文章代码主题设置"></a>文章代码主题设置</h6>主题目录下_config.yml，highlight_theme</li></ul><h2 id="部署个人博客"><a href="#部署个人博客" class="headerlink" title="部署个人博客"></a>部署个人博客</h2><ul><li>在代码线上管理复制仓库地址</li><li>项目根目录_config.yml，修改deploy值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:hineQi&#x2F;hineqi.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li>项目根目录，打开Git Bash<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name空格+你的码云的名字</span><br><span class="line">git config --global user.email空格+你的码云的邮箱</span><br></pre></td></tr></table></figure></li><li>安装<code>hexo-deployer-git</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      使用版本管理及开源Hexo创建免费个人博客流程
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="参考文件" scheme="http://yoursite.com/categories/%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6/"/>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
